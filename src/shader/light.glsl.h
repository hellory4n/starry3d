// Autogenerated by MrShadificator
// Source: light.glsl

#ifndef _ST_LIGHT_SHADER_H
#define _ST_LIGHT_SHADER_H

#define ST_LIGHT_SHADER_VERTEX \
	"#version 330 core\n" \
	"\n" \
	"layout (location = 0) in vec3 pos;\n" \
	"layout (location = 1) in vec3 normal;\n" \
	"layout (location = 2) in vec2 texcoord;\n" \
	"\n" \
	"out vec3 out_normal;\n" \
	"out vec2 out_texcoord;\n" \
	"out vec3 out_pos;\n" \
	"\n" \
	"uniform mat4 u_model;\n" \
	"uniform mat4 u_view;\n" \
	"uniform mat4 u_proj;\n" \
	"uniform vec4 u_tint;\n" \
	"\n" \
	"void main()\n" \
	"{\n" \
	"\tgl_Position = u_proj * u_view * u_model * vec4(pos, 1.0);\n" \
	"\tout_texcoord = texcoord;\n" \
	"\tout_normal = normal;\n" \
	"\tout_pos = pos;\n" \
	"}\n" \
	"\n" \

#define ST_LIGHT_SHADER_FRAGMENT \
	"#version 330 core\n" \
	"\n" \
	"in vec3 out_normal;\n" \
	"in vec2 out_texcoord;\n" \
	"in vec3 out_pos;\n" \
	"\n" \
	"out vec4 FragColor;\n" \
	"\n" \
	"uniform sampler2D u_texture;\n" \
	"uniform bool u_has_texture;\n" \
	"uniform vec3 u_ambient;\n" \
	"uniform vec4 u_obj_color;\n" \
	"uniform vec3 u_sun_color;\n" \
	"uniform vec3 u_sun_dir;\n" \
	"\n" \
	"void main()\n" \
	"{\n" \
	"\tvec4 obj_color = u_has_texture\n" \
	"\t\t? texture(u_texture, out_texcoord) * u_obj_color\n" \
	"\t\t: u_obj_color;\n" \
	"\n" \
	"\t// make sure it's normalized\n" \
	"\tvec3 normal = normalize(out_normal);\n" \
	"\tvec3 sundir = normalize(u_sun_dir);\n" \
	"\n" \
	"\tfloat diff = max(dot(normal, sundir), 0.0);\n" \
	"\tFragColor = vec4(obj_color.rgb * ((u_ambient * u_sun_color) + diff * (1.0 - u_ambient * u_sun_color)), obj_color.a);\n" \
	"}\n" \

#endif
