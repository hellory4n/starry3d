// Autogenerated by MrShadificator
// Source: ../src/shader/vox.glsl

#ifndef _ST_VOX_SHADER_H
#define _ST_VOX_SHADER_H

#define ST_VOX_SHADER_VERTEX \
	"#version 330 core\n" \
	"\n" \
	"layout (location = 0) in vec3 pos;\n" \
	"layout (location = 1) in uint facing;\n" \
	"layout (location = 2) in uint color;\n" \
	"\n" \
	"uniform mat4 u_view;\n" \
	"uniform mat4 u_proj;\n" \
	"\n" \
	"flat out uint out_facing;\n" \
	"flat out uint out_color;\n" \
	"\n" \
	"void main()\n" \
	"{\n" \
	"\tgl_Position = u_proj * u_view * vec4(pos, 1.0);\n" \
	"\tout_facing = facing;\n" \
	"\tout_color = color;\n" \
	"}\n" \
	"\n" \

#define ST_VOX_SHADER_FRAGMENT \
	"#version 330 core\n" \
	"\n" \
	"flat in uint out_facing;\n" \
	"flat in uint out_color;\n" \
	"\n" \
	"out vec4 FragColor;\n" \
	"\n" \
	"uniform vec3 u_ambient;\n" \
	"uniform vec3 u_sun_color;\n" \
	"uniform vec3 u_sun_dir;\n" \
	"\n" \
	"layout(std140) uniform palette_block {\n" \
	"\tvec4 u_palette[256];\n" \
	"};\n" \
	"\n" \
	"void main()\n" \
	"{\n" \
	"\tvec4 obj_color = u_palette[out_color];\n" \
	"\n" \
	"\tvec3 normal;\n" \
	"\tswitch (out_facing) {\n" \
	"\t\tcase uint(0): normal = vec3(-1,  0,  0); break; // west\n" \
	"\t\tcase uint(1): normal = vec3( 1,  0,  0); break; // east\n" \
	"\t\tcase uint(2): normal = vec3( 0,  0, -1); break; // north\n" \
	"\t\tcase uint(3): normal = vec3( 0,  0,  1); break; // south\n" \
	"\t\tcase uint(4): normal = vec3( 0,  1,  0); break; // up\n" \
	"\t\tcase uint(5): normal = vec3( 0, -1,  0); break; // down\n" \
	"\t\tdefault:      normal = vec3( 0,  0,  0); break; // shut up compiler\n" \
	"\t}\n" \
	"\tvec3 sundir = normalize(u_sun_dir);\n" \
	"\n" \
	"\tfloat diff = max(dot(normal, sundir), 0.0);\n" \
	"\tFragColor = vec4(obj_color.rgb * ((u_ambient * u_sun_color) + diff * (1.0 - u_ambient * u_sun_color)), obj_color.a);\n" \
	"}\n" \

#endif
