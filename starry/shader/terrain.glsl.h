// Autogenerated by MrShader
// Source: starry/shader/terrain.glsl

#ifndef _ST_TERRAIN_SHADER_H
#define _ST_TERRAIN_SHADER_H

#ifdef __cplusplus
constexpr const char* ST_TERRAIN_SHADER_VERTEX = 
#else
static const char* ST_TERRAIN_SHADER_VERTEX = 
#endif
	"#version 430 core\n"
	"#line 34\n"
	"/*\n"
	"#line 34\n"
	" * starry3d: C++ voxel engine\n"
	"#line 34\n"
	" * https://github.com/hellory4n/starry3d\n"
	"#line 34\n"
	" *\n"
	"#line 34\n"
	" * starry/shader/vertex.glsl\n"
	"#line 34\n"
	" * For unpacking the aptly named `st::PackedModelVertex`\n"
	"#line 34\n"
	" *\n"
	"#line 34\n"
	" * Copyright (c) 2025 hellory4n <hellory4n@gmail.com>\n"
	"#line 34\n"
	" *\n"
	"#line 34\n"
	" * This software is provided 'as-is', without any express or implied\n"
	"#line 34\n"
	" * warranty. In no event will the authors be held liable for any damages\n"
	"#line 34\n"
	" * arising from the use of this software.\n"
	"#line 34\n"
	" *\n"
	"#line 34\n"
	" * Permission is granted to anyone to use this software for any purpose,\n"
	"#line 34\n"
	" * including commercial applications, and to alter it and redistribute it\n"
	"#line 34\n"
	" * freely, subject to the following restrictions:\n"
	"#line 34\n"
	" *\n"
	"#line 34\n"
	" * 1. The origin of this software must not be misrepresented; you must not\n"
	"#line 34\n"
	" *    claim that you wrote the original software. If you use this software\n"
	"#line 34\n"
	" *    in a product, an acknowledgment in the product documentation would be\n"
	"#line 34\n"
	" *    appreciated but is not required.\n"
	"#line 34\n"
	" * 2. Altered source versions must be plainly marked as such, and must not be\n"
	"#line 34\n"
	" *    misrepresented as being the original software.\n"
	"#line 34\n"
	" * 3. This notice may not be removed or altered from any source distribution.\n"
	"#line 34\n"
	" *\n"
	"#line 34\n"
	" */\n"
	"#line 34\n"
	"\n"
	"#line 34\n"
	"#ifndef _ST_VERTEX_H\n"
	"#line 34\n"
	"#define _ST_VERTEX_H\n"
	"#line 34\n"
	"\n"
	"#line 34\n"
	"/*\n"
	"#line 34\n"
	" * starry3d: C++ voxel engine\n"
	"#line 34\n"
	" * https://github.com/hellory4n/starry3d\n"
	"#line 34\n"
	" *\n"
	"#line 34\n"
	" * starry/shader/defs.glsl\n"
	"#line 34\n"
	" * Just a bunch of structs and enums and constants\n"
	"#line 34\n"
	" *\n"
	"#line 34\n"
	" * Copyright (c) 2025 hellory4n <hellory4n@gmail.com>\n"
	"#line 34\n"
	" *\n"
	"#line 34\n"
	" * This software is provided 'as-is', without any express or implied\n"
	"#line 34\n"
	" * warranty. In no event will the authors be held liable for any damages\n"
	"#line 34\n"
	" * arising from the use of this software.\n"
	"#line 34\n"
	" *\n"
	"#line 34\n"
	" * Permission is granted to anyone to use this software for any purpose,\n"
	"#line 34\n"
	" * including commercial applications, and to alter it and redistribute it\n"
	"#line 34\n"
	" * freely, subject to the following restrictions:\n"
	"#line 34\n"
	" *\n"
	"#line 34\n"
	" * 1. The origin of this software must not be misrepresented; you must not\n"
	"#line 34\n"
	" *    claim that you wrote the original software. If you use this software\n"
	"#line 34\n"
	" *    in a product, an acknowledgment in the product documentation would be\n"
	"#line 34\n"
	" *    appreciated but is not required.\n"
	"#line 34\n"
	" * 2. Altered source versions must be plainly marked as such, and must not be\n"
	"#line 34\n"
	" *    misrepresented as being the original software.\n"
	"#line 34\n"
	" * 3. This notice may not be removed or altered from any source distribution.\n"
	"#line 34\n"
	" *\n"
	"#line 34\n"
	" */\n"
	"#line 34\n"
	"\n"
	"#line 34\n"
	"#ifndef _ST_DEFS_H\n"
	"#line 34\n"
	"#define _ST_DEFS_H\n"
	"#line 34\n"
	"\n"
	"#line 34\n"
	"struct TerrainVertex {\n"
	"#line 34\n"
	"\tuvec3 position;\n"
	"#line 34\n"
	"\tuint normal;\n"
	"#line 34\n"
	"\tbool shaded;\n"
	"#line 34\n"
	"\tbool using_texture;\n"
	"#line 34\n"
	"\tbool billboard;\n"
	"#line 34\n"
	"\tuint texture_id;\n"
	"#line 34\n"
	"\tuvec4 color;\n"
	"#line 34\n"
	"\tuint chunk_pos_idx;\n"
	"#line 34\n"
	"};\n"
	"#line 34\n"
	"\n"
	"#line 34\n"
	"#define NORMAL_FRONT 0u\n"
	"#line 34\n"
	"#define NORMAL_BACK 1u\n"
	"#line 34\n"
	"#define NORMAL_LEFT 2u\n"
	"#line 34\n"
	"#define NORMAL_RIGHT 3u\n"
	"#line 34\n"
	"#define NORMAL_TOP 4u\n"
	"#line 34\n"
	"#define NORMAL_BOTTOM 5u\n"
	"#line 34\n"
	"\n"
	"#line 34\n"
	"#define CHUNK_SIZE 16\n"
	"#line 34\n"
	"\n"
	"#line 34\n"
	"struct Rect {\n"
	"#line 34\n"
	"\tuint x;\n"
	"#line 34\n"
	"\tuint y;\n"
	"#line 34\n"
	"\tuint width;\n"
	"#line 34\n"
	"\tuint height;\n"
	"#line 34\n"
	"};\n"
	"#line 34\n"
	"\n"
	"#line 34\n"
	"struct PackedTerrainVertex {\n"
	"#line 34\n"
	"\tuint x;\n"
	"#line 34\n"
	"\tuint y;\n"
	"#line 34\n"
	"\tuint z;\n"
	"#line 34\n"
	"};\n"
	"#line 34\n"
	"\n"
	"#line 34\n"
	"#endif // _ST_DEFS_H\n"
	"#line 34\n"
	"#pragma mrshader include starry/shader/defs.glsl\n"
	"#line 34\n"
	"\n"
	"#line 34\n"
	"TerrainVertex unpack_vertex(PackedTerrainVertex data)\n"
	"#line 34\n"
	"{\n"
	"#line 34\n"
	"\t// FIXME this definitely doesn't work on big endian who gives a shit\n"
	"#line 34\n"
	"\tTerrainVertex v;\n"
	"#line 34\n"
	"\tv.position.x = bitfieldExtract(data.x, 0, 4);\n"
	"#line 34\n"
	"\tv.position.y = bitfieldExtract(data.x, 4, 4);\n"
	"#line 34\n"
	"\tv.position.z = bitfieldExtract(data.x, 8, 4);\n"
	"#line 34\n"
	"\tv.normal = bitfieldExtract(data.x, 12, 3);\n"
	"#line 34\n"
	"\tv.using_texture = bool(bitfieldExtract(data.x, 15, 1));\n"
	"#line 34\n"
	"\tv.billboard = bool(bitfieldExtract(data.x, 16, 1));\n"
	"#line 34\n"
	"\tv.shaded = bool(bitfieldExtract(data.x, 17, 1));\n"
	"#line 34\n"
	"\n"
	"#line 34\n"
	"\tif (v.using_texture) {\n"
	"#line 34\n"
	"\t\tv.texture_id = bitfieldExtract(data.y, 0, 16);\n"
	"#line 34\n"
	"\t}\n"
	"#line 34\n"
	"\telse {\n"
	"#line 34\n"
	"\t\tv.color.r = bitfieldExtract(data.y, 0, 8);\n"
	"#line 34\n"
	"\t\tv.color.g = bitfieldExtract(data.y, 8, 8);\n"
	"#line 34\n"
	"\t\tv.color.b = bitfieldExtract(data.y, 16, 8);\n"
	"#line 34\n"
	"\t\tv.color.a = bitfieldExtract(data.y, 24, 8);\n"
	"#line 34\n"
	"\t}\n"
	"#line 34\n"
	"\n"
	"#line 34\n"
	"\tv.chunk_pos_idx = bitfieldExtract(data.z, 0, 16);\n"
	"#line 34\n"
	"\treturn v;\n"
	"#line 34\n"
	"}\n"
	"#line 34\n"
	"\n"
	"#line 34\n"
	"#endif // _ST_VERTEX_H\n"
	"#line 35\n"
	"/*\n"
	"#line 35\n"
	" * starry3d: C++ voxel engine\n"
	"#line 35\n"
	" * https://github.com/hellory4n/starry3d\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * starry/shader/atlas.glsl\n"
	"#line 35\n"
	" * Handles texture atlas stuff I guess.\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * Copyright (c) 2025 hellory4n <hellory4n@gmail.com>\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * This software is provided 'as-is', without any express or implied\n"
	"#line 35\n"
	" * warranty. In no event will the authors be held liable for any damages\n"
	"#line 35\n"
	" * arising from the use of this software.\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * Permission is granted to anyone to use this software for any purpose,\n"
	"#line 35\n"
	" * including commercial applications, and to alter it and redistribute it\n"
	"#line 35\n"
	" * freely, subject to the following restrictions:\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * 1. The origin of this software must not be misrepresented; you must not\n"
	"#line 35\n"
	" *    claim that you wrote the original software. If you use this software\n"
	"#line 35\n"
	" *    in a product, an acknowledgment in the product documentation would be\n"
	"#line 35\n"
	" *    appreciated but is not required.\n"
	"#line 35\n"
	" * 2. Altered source versions must be plainly marked as such, and must not be\n"
	"#line 35\n"
	" *    misrepresented as being the original software.\n"
	"#line 35\n"
	" * 3. This notice may not be removed or altered from any source distribution.\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" */\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"#ifndef _ST_ATLAS_H\n"
	"#line 35\n"
	"#define _ST_ATLAS_H\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"/*\n"
	"#line 35\n"
	" * starry3d: C++ voxel engine\n"
	"#line 35\n"
	" * https://github.com/hellory4n/starry3d\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * starry/shader/defs.glsl\n"
	"#line 35\n"
	" * Just a bunch of structs and enums and constants\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * Copyright (c) 2025 hellory4n <hellory4n@gmail.com>\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * This software is provided 'as-is', without any express or implied\n"
	"#line 35\n"
	" * warranty. In no event will the authors be held liable for any damages\n"
	"#line 35\n"
	" * arising from the use of this software.\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * Permission is granted to anyone to use this software for any purpose,\n"
	"#line 35\n"
	" * including commercial applications, and to alter it and redistribute it\n"
	"#line 35\n"
	" * freely, subject to the following restrictions:\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * 1. The origin of this software must not be misrepresented; you must not\n"
	"#line 35\n"
	" *    claim that you wrote the original software. If you use this software\n"
	"#line 35\n"
	" *    in a product, an acknowledgment in the product documentation would be\n"
	"#line 35\n"
	" *    appreciated but is not required.\n"
	"#line 35\n"
	" * 2. Altered source versions must be plainly marked as such, and must not be\n"
	"#line 35\n"
	" *    misrepresented as being the original software.\n"
	"#line 35\n"
	" * 3. This notice may not be removed or altered from any source distribution.\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" */\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"#ifndef _ST_DEFS_H\n"
	"#line 35\n"
	"#define _ST_DEFS_H\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"struct TerrainVertex {\n"
	"#line 35\n"
	"\tuvec3 position;\n"
	"#line 35\n"
	"\tuint normal;\n"
	"#line 35\n"
	"\tbool shaded;\n"
	"#line 35\n"
	"\tbool using_texture;\n"
	"#line 35\n"
	"\tbool billboard;\n"
	"#line 35\n"
	"\tuint texture_id;\n"
	"#line 35\n"
	"\tuvec4 color;\n"
	"#line 35\n"
	"\tuint chunk_pos_idx;\n"
	"#line 35\n"
	"};\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"#define NORMAL_FRONT 0u\n"
	"#line 35\n"
	"#define NORMAL_BACK 1u\n"
	"#line 35\n"
	"#define NORMAL_LEFT 2u\n"
	"#line 35\n"
	"#define NORMAL_RIGHT 3u\n"
	"#line 35\n"
	"#define NORMAL_TOP 4u\n"
	"#line 35\n"
	"#define NORMAL_BOTTOM 5u\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"#define CHUNK_SIZE 16\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"struct Rect {\n"
	"#line 35\n"
	"\tuint x;\n"
	"#line 35\n"
	"\tuint y;\n"
	"#line 35\n"
	"\tuint width;\n"
	"#line 35\n"
	"\tuint height;\n"
	"#line 35\n"
	"};\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"struct PackedTerrainVertex {\n"
	"#line 35\n"
	"\tuint x;\n"
	"#line 35\n"
	"\tuint y;\n"
	"#line 35\n"
	"\tuint z;\n"
	"#line 35\n"
	"};\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"#endif // _ST_DEFS_H\n"
	"#line 35\n"
	"#pragma mrshader include starry/shader/defs.glsl\n"
	"#line 35\n"
	"/*\n"
	"#line 35\n"
	" * starry3d: C++ voxel engine\n"
	"#line 35\n"
	" * https://github.com/hellory4n/starry3d\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * starry/shader/uniforms.glsl\n"
	"#line 35\n"
	" * Literally just uniforms\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * Copyright (c) 2025 hellory4n <hellory4n@gmail.com>\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * This software is provided 'as-is', without any express or implied\n"
	"#line 35\n"
	" * warranty. In no event will the authors be held liable for any damages\n"
	"#line 35\n"
	" * arising from the use of this software.\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * Permission is granted to anyone to use this software for any purpose,\n"
	"#line 35\n"
	" * including commercial applications, and to alter it and redistribute it\n"
	"#line 35\n"
	" * freely, subject to the following restrictions:\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * 1. The origin of this software must not be misrepresented; you must not\n"
	"#line 35\n"
	" *    claim that you wrote the original software. If you use this software\n"
	"#line 35\n"
	" *    in a product, an acknowledgment in the product documentation would be\n"
	"#line 35\n"
	" *    appreciated but is not required.\n"
	"#line 35\n"
	" * 2. Altered source versions must be plainly marked as such, and must not be\n"
	"#line 35\n"
	" *    misrepresented as being the original software.\n"
	"#line 35\n"
	" * 3. This notice may not be removed or altered from any source distribution.\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" */\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"#ifndef _ST_UNIFORMS_H\n"
	"#line 35\n"
	"#define _ST_UNIFORMS_H\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"/*\n"
	"#line 35\n"
	" * starry3d: C++ voxel engine\n"
	"#line 35\n"
	" * https://github.com/hellory4n/starry3d\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * starry/shader/defs.glsl\n"
	"#line 35\n"
	" * Just a bunch of structs and enums and constants\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * Copyright (c) 2025 hellory4n <hellory4n@gmail.com>\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * This software is provided 'as-is', without any express or implied\n"
	"#line 35\n"
	" * warranty. In no event will the authors be held liable for any damages\n"
	"#line 35\n"
	" * arising from the use of this software.\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * Permission is granted to anyone to use this software for any purpose,\n"
	"#line 35\n"
	" * including commercial applications, and to alter it and redistribute it\n"
	"#line 35\n"
	" * freely, subject to the following restrictions:\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * 1. The origin of this software must not be misrepresented; you must not\n"
	"#line 35\n"
	" *    claim that you wrote the original software. If you use this software\n"
	"#line 35\n"
	" *    in a product, an acknowledgment in the product documentation would be\n"
	"#line 35\n"
	" *    appreciated but is not required.\n"
	"#line 35\n"
	" * 2. Altered source versions must be plainly marked as such, and must not be\n"
	"#line 35\n"
	" *    misrepresented as being the original software.\n"
	"#line 35\n"
	" * 3. This notice may not be removed or altered from any source distribution.\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" */\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"#ifndef _ST_DEFS_H\n"
	"#line 35\n"
	"#define _ST_DEFS_H\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"struct TerrainVertex {\n"
	"#line 35\n"
	"\tuvec3 position;\n"
	"#line 35\n"
	"\tuint normal;\n"
	"#line 35\n"
	"\tbool shaded;\n"
	"#line 35\n"
	"\tbool using_texture;\n"
	"#line 35\n"
	"\tbool billboard;\n"
	"#line 35\n"
	"\tuint texture_id;\n"
	"#line 35\n"
	"\tuvec4 color;\n"
	"#line 35\n"
	"\tuint chunk_pos_idx;\n"
	"#line 35\n"
	"};\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"#define NORMAL_FRONT 0u\n"
	"#line 35\n"
	"#define NORMAL_BACK 1u\n"
	"#line 35\n"
	"#define NORMAL_LEFT 2u\n"
	"#line 35\n"
	"#define NORMAL_RIGHT 3u\n"
	"#line 35\n"
	"#define NORMAL_TOP 4u\n"
	"#line 35\n"
	"#define NORMAL_BOTTOM 5u\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"#define CHUNK_SIZE 16\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"struct Rect {\n"
	"#line 35\n"
	"\tuint x;\n"
	"#line 35\n"
	"\tuint y;\n"
	"#line 35\n"
	"\tuint width;\n"
	"#line 35\n"
	"\tuint height;\n"
	"#line 35\n"
	"};\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"struct PackedTerrainVertex {\n"
	"#line 35\n"
	"\tuint x;\n"
	"#line 35\n"
	"\tuint y;\n"
	"#line 35\n"
	"\tuint z;\n"
	"#line 35\n"
	"};\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"#endif // _ST_DEFS_H\n"
	"#line 35\n"
	"#pragma mrshader include starry/shader/defs.glsl\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"uniform mat4 u_view;\n"
	"#line 35\n"
	"uniform mat4 u_projection;\n"
	"#line 35\n"
	"uniform uvec2 u_atlas_size;\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"#pragma mrshader define U_VIEW \"u_view\"\n"
	"#line 35\n"
	"#pragma mrshader define U_PROJECTION \"u_projection\"\n"
	"#line 35\n"
	"#pragma mrshader define U_ATLAS_SIZE \"u_atlas_size\"\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"#pragma mrshader define SSBO_ATLAS 0\n"
	"#line 35\n"
	"layout(binding = 0, std430) readonly buffer atlas {\n"
	"#line 35\n"
	"\t// storing the whole 16k rects is faster than implementing hashmaps on the gpu\n"
	"#line 35\n"
	"\tRect u_atlas_textures[];\n"
	"#line 35\n"
	"};\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"#pragma mrshader define SSBO_VERTICES 1\n"
	"#line 35\n"
	"layout(binding = 1, std430) readonly buffer vertices {\n"
	"#line 35\n"
	"\tPackedTerrainVertex u_vertices[];\n"
	"#line 35\n"
	"};\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"#pragma mrshader define SSBO_CHUNK_POSITIONS 2\n"
	"#line 35\n"
	"layout(binding = 2, std430) readonly buffer chunk_positions {\n"
	"#line 35\n"
	"\t// the w is for padding\n"
	"#line 35\n"
	"\t// ivec3 would make that padding hidden\n"
	"#line 35\n"
	"\tivec4 u_chunk_positions[];\n"
	"#line 35\n"
	"};\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"#endif // _ST_UNIFORMS_H\n"
	"#line 35\n"
	"#pragma mrshader include starry/shader/uniforms.glsl\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"vec2 get_texcoords(TerrainVertex v, int vertex_id)\n"
	"#line 35\n"
	"{\n"
	"#line 35\n"
	"\tvec2 texcoords;\n"
	"#line 35\n"
	"\tRect texture_rect = u_atlas_textures[v.texture_id];\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"\tswitch (vertex_id) {\n"
	"#line 35\n"
	"\tcase 2: // top left\n"
	"#line 35\n"
	"\t\ttexcoords = vec2(float(texture_rect.x), float(texture_rect.y));\n"
	"#line 35\n"
	"\t\tbreak;\n"
	"#line 35\n"
	"\tcase 1: // top right\n"
	"#line 35\n"
	"\tcase 3:\n"
	"#line 35\n"
	"\t\ttexcoords = vec2(float(texture_rect.x + texture_rect.width), float(texture_rect.y));\n"
	"#line 35\n"
	"\t\tbreak;\n"
	"#line 35\n"
	"\tcase 0: // bottom left\n"
	"#line 35\n"
	"\tcase 5:\n"
	"#line 35\n"
	"\t\ttexcoords = vec2(float(texture_rect.x), float(texture_rect.y + texture_rect.height));\n"
	"#line 35\n"
	"\t\tbreak;\n"
	"#line 35\n"
	"\tcase 4: // bottom right\n"
	"#line 35\n"
	"\t\ttexcoords = vec2(float(texture_rect.x + texture_rect.width),\n"
	"#line 35\n"
	"\t\t\tfloat(texture_rect.y + texture_rect.height)\n"
	"#line 35\n"
	"\t\t);\n"
	"#line 35\n"
	"\t\tbreak;\n"
	"#line 35\n"
	"\t}\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"\treturn texcoords / vec2(u_atlas_size);\n"
	"#line 35\n"
	"}\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"#endif // _ST_ATLAS_H\n"
	"#line 36\n"
	"/*\n"
	"#line 36\n"
	" * starry3d: C++ voxel engine\n"
	"#line 36\n"
	" * https://github.com/hellory4n/starry3d\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * starry/shader/uniforms.glsl\n"
	"#line 36\n"
	" * Literally just uniforms\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * Copyright (c) 2025 hellory4n <hellory4n@gmail.com>\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * This software is provided 'as-is', without any express or implied\n"
	"#line 36\n"
	" * warranty. In no event will the authors be held liable for any damages\n"
	"#line 36\n"
	" * arising from the use of this software.\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * Permission is granted to anyone to use this software for any purpose,\n"
	"#line 36\n"
	" * including commercial applications, and to alter it and redistribute it\n"
	"#line 36\n"
	" * freely, subject to the following restrictions:\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * 1. The origin of this software must not be misrepresented; you must not\n"
	"#line 36\n"
	" *    claim that you wrote the original software. If you use this software\n"
	"#line 36\n"
	" *    in a product, an acknowledgment in the product documentation would be\n"
	"#line 36\n"
	" *    appreciated but is not required.\n"
	"#line 36\n"
	" * 2. Altered source versions must be plainly marked as such, and must not be\n"
	"#line 36\n"
	" *    misrepresented as being the original software.\n"
	"#line 36\n"
	" * 3. This notice may not be removed or altered from any source distribution.\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" */\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"#ifndef _ST_UNIFORMS_H\n"
	"#line 36\n"
	"#define _ST_UNIFORMS_H\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"/*\n"
	"#line 36\n"
	" * starry3d: C++ voxel engine\n"
	"#line 36\n"
	" * https://github.com/hellory4n/starry3d\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * starry/shader/defs.glsl\n"
	"#line 36\n"
	" * Just a bunch of structs and enums and constants\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * Copyright (c) 2025 hellory4n <hellory4n@gmail.com>\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * This software is provided 'as-is', without any express or implied\n"
	"#line 36\n"
	" * warranty. In no event will the authors be held liable for any damages\n"
	"#line 36\n"
	" * arising from the use of this software.\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * Permission is granted to anyone to use this software for any purpose,\n"
	"#line 36\n"
	" * including commercial applications, and to alter it and redistribute it\n"
	"#line 36\n"
	" * freely, subject to the following restrictions:\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * 1. The origin of this software must not be misrepresented; you must not\n"
	"#line 36\n"
	" *    claim that you wrote the original software. If you use this software\n"
	"#line 36\n"
	" *    in a product, an acknowledgment in the product documentation would be\n"
	"#line 36\n"
	" *    appreciated but is not required.\n"
	"#line 36\n"
	" * 2. Altered source versions must be plainly marked as such, and must not be\n"
	"#line 36\n"
	" *    misrepresented as being the original software.\n"
	"#line 36\n"
	" * 3. This notice may not be removed or altered from any source distribution.\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" */\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"#ifndef _ST_DEFS_H\n"
	"#line 36\n"
	"#define _ST_DEFS_H\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"struct TerrainVertex {\n"
	"#line 36\n"
	"\tuvec3 position;\n"
	"#line 36\n"
	"\tuint normal;\n"
	"#line 36\n"
	"\tbool shaded;\n"
	"#line 36\n"
	"\tbool using_texture;\n"
	"#line 36\n"
	"\tbool billboard;\n"
	"#line 36\n"
	"\tuint texture_id;\n"
	"#line 36\n"
	"\tuvec4 color;\n"
	"#line 36\n"
	"\tuint chunk_pos_idx;\n"
	"#line 36\n"
	"};\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"#define NORMAL_FRONT 0u\n"
	"#line 36\n"
	"#define NORMAL_BACK 1u\n"
	"#line 36\n"
	"#define NORMAL_LEFT 2u\n"
	"#line 36\n"
	"#define NORMAL_RIGHT 3u\n"
	"#line 36\n"
	"#define NORMAL_TOP 4u\n"
	"#line 36\n"
	"#define NORMAL_BOTTOM 5u\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"#define CHUNK_SIZE 16\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"struct Rect {\n"
	"#line 36\n"
	"\tuint x;\n"
	"#line 36\n"
	"\tuint y;\n"
	"#line 36\n"
	"\tuint width;\n"
	"#line 36\n"
	"\tuint height;\n"
	"#line 36\n"
	"};\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"struct PackedTerrainVertex {\n"
	"#line 36\n"
	"\tuint x;\n"
	"#line 36\n"
	"\tuint y;\n"
	"#line 36\n"
	"\tuint z;\n"
	"#line 36\n"
	"};\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"#endif // _ST_DEFS_H\n"
	"#line 36\n"
	"#pragma mrshader include starry/shader/defs.glsl\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"uniform mat4 u_view;\n"
	"#line 36\n"
	"uniform mat4 u_projection;\n"
	"#line 36\n"
	"uniform uvec2 u_atlas_size;\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"#pragma mrshader define U_VIEW \"u_view\"\n"
	"#line 36\n"
	"#pragma mrshader define U_PROJECTION \"u_projection\"\n"
	"#line 36\n"
	"#pragma mrshader define U_ATLAS_SIZE \"u_atlas_size\"\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"#pragma mrshader define SSBO_ATLAS 0\n"
	"#line 36\n"
	"layout(binding = 0, std430) readonly buffer atlas {\n"
	"#line 36\n"
	"\t// storing the whole 16k rects is faster than implementing hashmaps on the gpu\n"
	"#line 36\n"
	"\tRect u_atlas_textures[];\n"
	"#line 36\n"
	"};\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"#pragma mrshader define SSBO_VERTICES 1\n"
	"#line 36\n"
	"layout(binding = 1, std430) readonly buffer vertices {\n"
	"#line 36\n"
	"\tPackedTerrainVertex u_vertices[];\n"
	"#line 36\n"
	"};\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"#pragma mrshader define SSBO_CHUNK_POSITIONS 2\n"
	"#line 36\n"
	"layout(binding = 2, std430) readonly buffer chunk_positions {\n"
	"#line 36\n"
	"\t// the w is for padding\n"
	"#line 36\n"
	"\t// ivec3 would make that padding hidden\n"
	"#line 36\n"
	"\tivec4 u_chunk_positions[];\n"
	"#line 36\n"
	"};\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"#endif // _ST_UNIFORMS_H\n"
	"#line 37\n"
	"\n"
	"#line 38\n"
	"// literally just filler\n"
	"#line 39\n"
	"// the actual vertex data is calculated with gl_VertexID and the terrain ssbo\n"
	"#line 40\n"
	"// TODO probably unnecessary\n"
	"#line 41\n"
	"layout(location = 0) in int vs_filler;\n"
	"#line 42\n"
	"\n"
	"#line 43\n"
	"out vec2 fs_texcoords;\n"
	"#line 44\n"
	"out vec4 fs_color;\n"
	"#line 45\n"
	"flat out uint fs_normal;\n"
	"#line 46\n"
	"// you can't pass a bool here :DDDDD\n"
	"#line 47\n"
	"flat out int fs_using_texture;\n"
	"#line 48\n"
	"flat out int fs_shaded;\n"
	"#line 49\n"
	"\n"
	"#line 50\n"
	"void main()\n"
	"#line 51\n"
	"{\n"
	"#line 52\n"
	"\t// procedurally generated quad\n"
	"#line 53\n"
	"\tvec3 quad_position;\n"
	"#line 54\n"
	"\tswitch (gl_VertexID) {\n"
	"#line 55\n"
	"\tcase 0: // bottom left\n"
	"#line 56\n"
	"\t\tquad_position = vec3(-0.5, -0.5, 0);\n"
	"#line 57\n"
	"\t\tbreak;\n"
	"#line 58\n"
	"\tcase 1: // top right\n"
	"#line 59\n"
	"\t\tquad_position = vec3(0.5, 0.5, 0);\n"
	"#line 60\n"
	"\t\tbreak;\n"
	"#line 61\n"
	"\tcase 2: // top left\n"
	"#line 62\n"
	"\t\tquad_position = vec3(-0.5, 0.5, 0);\n"
	"#line 63\n"
	"\t\tbreak;\n"
	"#line 64\n"
	"\tcase 3: // top right\n"
	"#line 65\n"
	"\t\tquad_position = vec3(0.5, 0.5, 0);\n"
	"#line 66\n"
	"\t\tbreak;\n"
	"#line 67\n"
	"\tcase 4: // bottom right\n"
	"#line 68\n"
	"\t\tquad_position = vec3(0.5, -0.5, 0);\n"
	"#line 69\n"
	"\t\tbreak;\n"
	"#line 70\n"
	"\tcase 5: // bottom left\n"
	"#line 71\n"
	"\t\tquad_position = vec3(-0.5, -0.5, 0);\n"
	"#line 72\n"
	"\t\tbreak;\n"
	"#line 73\n"
	"\t}\n"
	"#line 74\n"
	"\n"
	"#line 75\n"
	"\tTerrainVertex v = unpack_vertex(u_vertices[gl_InstanceID]);\n"
	"#line 76\n"
	"\n"
	"#line 77\n"
	"\t// the quad is facing front, rotate it for all the other faces\n"
	"#line 78\n"
	"\tswitch (v.normal) {\n"
	"#line 79\n"
	"\tcase NORMAL_FRONT:\n"
	"#line 80\n"
	"\t\tquad_position = vec3(quad_position.x, quad_position.y, 0.5);\n"
	"#line 81\n"
	"\t\tbreak;\n"
	"#line 82\n"
	"\tcase NORMAL_BACK:\n"
	"#line 83\n"
	"\t\tquad_position = vec3(-quad_position.x, quad_position.y, -0.5);\n"
	"#line 84\n"
	"\t\tbreak;\n"
	"#line 85\n"
	"\tcase NORMAL_LEFT:\n"
	"#line 86\n"
	"\t\tquad_position = vec3(-0.5, quad_position.y, quad_position.x);\n"
	"#line 87\n"
	"\t\tbreak;\n"
	"#line 88\n"
	"\tcase NORMAL_RIGHT:\n"
	"#line 89\n"
	"\t\tquad_position = vec3(0.5, quad_position.y, -quad_position.x);\n"
	"#line 90\n"
	"\t\tbreak;\n"
	"#line 91\n"
	"\tcase NORMAL_TOP:\n"
	"#line 92\n"
	"\t\tquad_position = vec3(quad_position.x, 0.5, -quad_position.y);\n"
	"#line 93\n"
	"\t\tbreak;\n"
	"#line 94\n"
	"\tcase NORMAL_BOTTOM:\n"
	"#line 95\n"
	"\t\tquad_position = vec3(quad_position.x, -0.5, quad_position.y);\n"
	"#line 96\n"
	"\t\tbreak;\n"
	"#line 97\n"
	"\t}\n"
	"#line 98\n"
	"\n"
	"#line 99\n"
	"\tivec3 chunk = u_chunk_positions[int(v.chunk_pos_idx)].xyz;\n"
	"#line 100\n"
	"\tvec3 position = (vec3(chunk) * CHUNK_SIZE) + (vec3(v.position) + quad_position);\n"
	"#line 101\n"
	"\tgl_Position = u_projection * u_view * vec4(position, 1.0);\n"
	"#line 102\n"
	"\n"
	"#line 103\n"
	"\tif (v.using_texture) {\n"
	"#line 104\n"
	"\t\tfs_texcoords = get_texcoords(v, gl_VertexID);\n"
	"#line 105\n"
	"\t\tfs_color = vec4(1, 1, 1, 1);\n"
	"#line 106\n"
	"\t}\n"
	"#line 107\n"
	"\telse {\n"
	"#line 108\n"
	"\t\tfs_texcoords = vec2(0, 0);\n"
	"#line 109\n"
	"\t\tfs_color = vec4(v.color) / 255;\n"
	"#line 110\n"
	"\t}\n"
	"#line 111\n"
	"\tfs_normal = v.normal;\n"
	"#line 112\n"
	"\tfs_using_texture = int(v.using_texture);\n"
	"#line 113\n"
	"\tfs_shaded = int(v.shaded);\n"
	"#line 114\n"
	"}\n"
	"#line 115\n"
	"\n";

#ifdef __cplusplus
constexpr const char* ST_TERRAIN_SHADER_FRAGMENT = 
#else
static const char* ST_TERRAIN_SHADER_FRAGMENT = 
#endif
	"#version 430 core\n"
	"#line 117\n"
	"/*\n"
	"#line 117\n"
	" * starry3d: C++ voxel engine\n"
	"#line 117\n"
	" * https://github.com/hellory4n/starry3d\n"
	"#line 117\n"
	" *\n"
	"#line 117\n"
	" * starry/shader/uniforms.glsl\n"
	"#line 117\n"
	" * Literally just uniforms\n"
	"#line 117\n"
	" *\n"
	"#line 117\n"
	" * Copyright (c) 2025 hellory4n <hellory4n@gmail.com>\n"
	"#line 117\n"
	" *\n"
	"#line 117\n"
	" * This software is provided 'as-is', without any express or implied\n"
	"#line 117\n"
	" * warranty. In no event will the authors be held liable for any damages\n"
	"#line 117\n"
	" * arising from the use of this software.\n"
	"#line 117\n"
	" *\n"
	"#line 117\n"
	" * Permission is granted to anyone to use this software for any purpose,\n"
	"#line 117\n"
	" * including commercial applications, and to alter it and redistribute it\n"
	"#line 117\n"
	" * freely, subject to the following restrictions:\n"
	"#line 117\n"
	" *\n"
	"#line 117\n"
	" * 1. The origin of this software must not be misrepresented; you must not\n"
	"#line 117\n"
	" *    claim that you wrote the original software. If you use this software\n"
	"#line 117\n"
	" *    in a product, an acknowledgment in the product documentation would be\n"
	"#line 117\n"
	" *    appreciated but is not required.\n"
	"#line 117\n"
	" * 2. Altered source versions must be plainly marked as such, and must not be\n"
	"#line 117\n"
	" *    misrepresented as being the original software.\n"
	"#line 117\n"
	" * 3. This notice may not be removed or altered from any source distribution.\n"
	"#line 117\n"
	" *\n"
	"#line 117\n"
	" */\n"
	"#line 117\n"
	"\n"
	"#line 117\n"
	"#ifndef _ST_UNIFORMS_H\n"
	"#line 117\n"
	"#define _ST_UNIFORMS_H\n"
	"#line 117\n"
	"\n"
	"#line 117\n"
	"/*\n"
	"#line 117\n"
	" * starry3d: C++ voxel engine\n"
	"#line 117\n"
	" * https://github.com/hellory4n/starry3d\n"
	"#line 117\n"
	" *\n"
	"#line 117\n"
	" * starry/shader/defs.glsl\n"
	"#line 117\n"
	" * Just a bunch of structs and enums and constants\n"
	"#line 117\n"
	" *\n"
	"#line 117\n"
	" * Copyright (c) 2025 hellory4n <hellory4n@gmail.com>\n"
	"#line 117\n"
	" *\n"
	"#line 117\n"
	" * This software is provided 'as-is', without any express or implied\n"
	"#line 117\n"
	" * warranty. In no event will the authors be held liable for any damages\n"
	"#line 117\n"
	" * arising from the use of this software.\n"
	"#line 117\n"
	" *\n"
	"#line 117\n"
	" * Permission is granted to anyone to use this software for any purpose,\n"
	"#line 117\n"
	" * including commercial applications, and to alter it and redistribute it\n"
	"#line 117\n"
	" * freely, subject to the following restrictions:\n"
	"#line 117\n"
	" *\n"
	"#line 117\n"
	" * 1. The origin of this software must not be misrepresented; you must not\n"
	"#line 117\n"
	" *    claim that you wrote the original software. If you use this software\n"
	"#line 117\n"
	" *    in a product, an acknowledgment in the product documentation would be\n"
	"#line 117\n"
	" *    appreciated but is not required.\n"
	"#line 117\n"
	" * 2. Altered source versions must be plainly marked as such, and must not be\n"
	"#line 117\n"
	" *    misrepresented as being the original software.\n"
	"#line 117\n"
	" * 3. This notice may not be removed or altered from any source distribution.\n"
	"#line 117\n"
	" *\n"
	"#line 117\n"
	" */\n"
	"#line 117\n"
	"\n"
	"#line 117\n"
	"#ifndef _ST_DEFS_H\n"
	"#line 117\n"
	"#define _ST_DEFS_H\n"
	"#line 117\n"
	"\n"
	"#line 117\n"
	"struct TerrainVertex {\n"
	"#line 117\n"
	"\tuvec3 position;\n"
	"#line 117\n"
	"\tuint normal;\n"
	"#line 117\n"
	"\tbool shaded;\n"
	"#line 117\n"
	"\tbool using_texture;\n"
	"#line 117\n"
	"\tbool billboard;\n"
	"#line 117\n"
	"\tuint texture_id;\n"
	"#line 117\n"
	"\tuvec4 color;\n"
	"#line 117\n"
	"\tuint chunk_pos_idx;\n"
	"#line 117\n"
	"};\n"
	"#line 117\n"
	"\n"
	"#line 117\n"
	"#define NORMAL_FRONT 0u\n"
	"#line 117\n"
	"#define NORMAL_BACK 1u\n"
	"#line 117\n"
	"#define NORMAL_LEFT 2u\n"
	"#line 117\n"
	"#define NORMAL_RIGHT 3u\n"
	"#line 117\n"
	"#define NORMAL_TOP 4u\n"
	"#line 117\n"
	"#define NORMAL_BOTTOM 5u\n"
	"#line 117\n"
	"\n"
	"#line 117\n"
	"#define CHUNK_SIZE 16\n"
	"#line 117\n"
	"\n"
	"#line 117\n"
	"struct Rect {\n"
	"#line 117\n"
	"\tuint x;\n"
	"#line 117\n"
	"\tuint y;\n"
	"#line 117\n"
	"\tuint width;\n"
	"#line 117\n"
	"\tuint height;\n"
	"#line 117\n"
	"};\n"
	"#line 117\n"
	"\n"
	"#line 117\n"
	"struct PackedTerrainVertex {\n"
	"#line 117\n"
	"\tuint x;\n"
	"#line 117\n"
	"\tuint y;\n"
	"#line 117\n"
	"\tuint z;\n"
	"#line 117\n"
	"};\n"
	"#line 117\n"
	"\n"
	"#line 117\n"
	"#endif // _ST_DEFS_H\n"
	"#line 117\n"
	"#pragma mrshader include starry/shader/defs.glsl\n"
	"#line 117\n"
	"\n"
	"#line 117\n"
	"uniform mat4 u_view;\n"
	"#line 117\n"
	"uniform mat4 u_projection;\n"
	"#line 117\n"
	"uniform uvec2 u_atlas_size;\n"
	"#line 117\n"
	"\n"
	"#line 117\n"
	"#pragma mrshader define U_VIEW \"u_view\"\n"
	"#line 117\n"
	"#pragma mrshader define U_PROJECTION \"u_projection\"\n"
	"#line 117\n"
	"#pragma mrshader define U_ATLAS_SIZE \"u_atlas_size\"\n"
	"#line 117\n"
	"\n"
	"#line 117\n"
	"#pragma mrshader define SSBO_ATLAS 0\n"
	"#line 117\n"
	"layout(binding = 0, std430) readonly buffer atlas {\n"
	"#line 117\n"
	"\t// storing the whole 16k rects is faster than implementing hashmaps on the gpu\n"
	"#line 117\n"
	"\tRect u_atlas_textures[];\n"
	"#line 117\n"
	"};\n"
	"#line 117\n"
	"\n"
	"#line 117\n"
	"#pragma mrshader define SSBO_VERTICES 1\n"
	"#line 117\n"
	"layout(binding = 1, std430) readonly buffer vertices {\n"
	"#line 117\n"
	"\tPackedTerrainVertex u_vertices[];\n"
	"#line 117\n"
	"};\n"
	"#line 117\n"
	"\n"
	"#line 117\n"
	"#pragma mrshader define SSBO_CHUNK_POSITIONS 2\n"
	"#line 117\n"
	"layout(binding = 2, std430) readonly buffer chunk_positions {\n"
	"#line 117\n"
	"\t// the w is for padding\n"
	"#line 117\n"
	"\t// ivec3 would make that padding hidden\n"
	"#line 117\n"
	"\tivec4 u_chunk_positions[];\n"
	"#line 117\n"
	"};\n"
	"#line 117\n"
	"\n"
	"#line 117\n"
	"#endif // _ST_UNIFORMS_H\n"
	"#line 118\n"
	"/*\n"
	"#line 118\n"
	" * starry3d: C++ voxel engine\n"
	"#line 118\n"
	" * https://github.com/hellory4n/starry3d\n"
	"#line 118\n"
	" *\n"
	"#line 118\n"
	" * starry/shader/light.glsl\n"
	"#line 118\n"
	" * Lighting.\n"
	"#line 118\n"
	" *\n"
	"#line 118\n"
	" * Copyright (c) 2025 hellory4n <hellory4n@gmail.com>\n"
	"#line 118\n"
	" *\n"
	"#line 118\n"
	" * This software is provided 'as-is', without any express or implied\n"
	"#line 118\n"
	" * warranty. In no event will the authors be held liable for any damages\n"
	"#line 118\n"
	" * arising from the use of this software.\n"
	"#line 118\n"
	" *\n"
	"#line 118\n"
	" * Permission is granted to anyone to use this software for any purpose,\n"
	"#line 118\n"
	" * including commercial applications, and to alter it and redistribute it\n"
	"#line 118\n"
	" * freely, subject to the following restrictions:\n"
	"#line 118\n"
	" *\n"
	"#line 118\n"
	" * 1. The origin of this software must not be misrepresented; you must not\n"
	"#line 118\n"
	" *    claim that you wrote the original software. If you use this software\n"
	"#line 118\n"
	" *    in a product, an acknowledgment in the product documentation would be\n"
	"#line 118\n"
	" *    appreciated but is not required.\n"
	"#line 118\n"
	" * 2. Altered source versions must be plainly marked as such, and must not be\n"
	"#line 118\n"
	" *    misrepresented as being the original software.\n"
	"#line 118\n"
	" * 3. This notice may not be removed or altered from any source distribution.\n"
	"#line 118\n"
	" *\n"
	"#line 118\n"
	" */\n"
	"#line 118\n"
	"\n"
	"#line 118\n"
	"#ifndef _ST_LIGHT_H\n"
	"#line 118\n"
	"#define _ST_LIGHT_H\n"
	"#line 118\n"
	"\n"
	"#line 118\n"
	"// shitty tmp constants\n"
	"#line 118\n"
	"const vec3 SUN_DIR = vec3(0.5, 1.0, -0.75);\n"
	"#line 118\n"
	"const vec4 SUN_COLOR = vec4(1, 1, 1, 1);\n"
	"#line 118\n"
	"const vec4 AMBIENT = vec4(0.5, 0.55, 0.5, 1);\n"
	"#line 118\n"
	"\n"
	"#line 118\n"
	"vec4 light(vec4 src, vec3 normal)\n"
	"#line 118\n"
	"{\n"
	"#line 118\n"
	"\tvec3 sundir = normalize(SUN_DIR);\n"
	"#line 118\n"
	"\tfloat diff = max(dot(normal, sundir), 0.0);\n"
	"#line 118\n"
	"\treturn src * ((AMBIENT * SUN_COLOR) + diff * (1.0 - AMBIENT * SUN_COLOR));\n"
	"#line 118\n"
	"}\n"
	"#line 118\n"
	"\n"
	"#line 118\n"
	"#endif // _ST_LIGHT_H\n"
	"#line 119\n"
	"\n"
	"#line 120\n"
	"in vec2 fs_texcoords;\n"
	"#line 121\n"
	"in vec4 fs_color;\n"
	"#line 122\n"
	"flat in uint fs_normal;\n"
	"#line 123\n"
	"flat in int fs_using_texture;\n"
	"#line 124\n"
	"flat in int fs_shaded;\n"
	"#line 125\n"
	"\n"
	"#line 126\n"
	"out vec4 frag_color;\n"
	"#line 127\n"
	"\n"
	"#line 128\n"
	"uniform sampler2D u_texture;\n"
	"#line 129\n"
	"\n"
	"#line 130\n"
	"void main()\n"
	"#line 131\n"
	"{\n"
	"#line 132\n"
	"\tif (u_atlas_size == uvec2(0, 0)) {\n"
	"#line 133\n"
	"\t\tfrag_color = vec4(1, 0, 0, 1);\n"
	"#line 134\n"
	"\t\treturn;\n"
	"#line 135\n"
	"\t}\n"
	"#line 136\n"
	"\tconst vec3 REAL_NORMALS[6] = {\n"
	"#line 137\n"
	"\t\tvec3(0, 0, -1),\n"
	"#line 138\n"
	"\t\tvec3(0, 0, 1),\n"
	"#line 139\n"
	"\t\tvec3(-1, 0, 0),\n"
	"#line 140\n"
	"\t\tvec3(1, 0, 0),\n"
	"#line 141\n"
	"\t\tvec3(0, 1, 0),\n"
	"#line 142\n"
	"\t\tvec3(0, -1, 0),\n"
	"#line 143\n"
	"\t};\n"
	"#line 144\n"
	"\tvec3 real_normal = REAL_NORMALS[fs_normal];\n"
	"#line 145\n"
	"\n"
	"#line 146\n"
	"\tvec4 base_color;\n"
	"#line 147\n"
	"\tif (bool(fs_using_texture)) {\n"
	"#line 148\n"
	"\t\tbase_color = texture(u_texture, fs_texcoords);\n"
	"#line 149\n"
	"\t}\n"
	"#line 150\n"
	"\telse {\n"
	"#line 151\n"
	"\t\t// TODO decent transparency (tricky)\n"
	"#line 152\n"
	"\t\tbase_color = vec4(fs_color.rgb, 1);\n"
	"#line 153\n"
	"\t}\n"
	"#line 154\n"
	"\tfrag_color = vec4(light(base_color, real_normal).rgb, 1);\n"
	"#line 155\n"
	"}\n";

#define ST_TERRAIN_SHADER_U_ATLAS_SIZE "u_atlas_size"
#define ST_TERRAIN_SHADER_SSBO_CHUNK_POSITIONS 2
#define ST_TERRAIN_SHADER_SSBO_VERTICES 1
#define ST_TERRAIN_SHADER_U_PROJECTION "u_projection"
#define ST_TERRAIN_SHADER_SSBO_ATLAS 0
#define ST_TERRAIN_SHADER_U_VIEW "u_view"

#endif
