// Autogenerated by MrShader
// Source: starry/shader/terrain.glsl

#ifndef _ST_TERRAIN_SHADER_H
#define _ST_TERRAIN_SHADER_H

#ifdef __cplusplus
constexpr const char* ST_TERRAIN_SHADER_VERTEX = 
#else
static const char* ST_TERRAIN_SHADER_VERTEX = 
#endif
	"#version 430 core\n"
	"#line 34\n"
	"\n"
	"#line 35\n"
	"/*\n"
	"#line 35\n"
	" * starry3d: C++ voxel engine\n"
	"#line 35\n"
	" * https://github.com/hellory4n/starry3d\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * starry/shader/vertex.glsl\n"
	"#line 35\n"
	" * For unpacking the aptly named `st::PackedModelVertex`\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * Copyright (c) 2025 hellory4n <hellory4n@gmail.com>\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * This software is provided 'as-is', without any express or implied\n"
	"#line 35\n"
	" * warranty. In no event will the authors be held liable for any damages\n"
	"#line 35\n"
	" * arising from the use of this software.\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * Permission is granted to anyone to use this software for any purpose,\n"
	"#line 35\n"
	" * including commercial applications, and to alter it and redistribute it\n"
	"#line 35\n"
	" * freely, subject to the following restrictions:\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * 1. The origin of this software must not be misrepresented; you must not\n"
	"#line 35\n"
	" *    claim that you wrote the original software. If you use this software\n"
	"#line 35\n"
	" *    in a product, an acknowledgment in the product documentation would be\n"
	"#line 35\n"
	" *    appreciated but is not required.\n"
	"#line 35\n"
	" * 2. Altered source versions must be plainly marked as such, and must not be\n"
	"#line 35\n"
	" *    misrepresented as being the original software.\n"
	"#line 35\n"
	" * 3. This notice may not be removed or altered from any source distribution.\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" */\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"#ifndef _ST_VERTEX_H\n"
	"#line 35\n"
	"#define _ST_VERTEX_H\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"/*\n"
	"#line 35\n"
	" * starry3d: C++ voxel engine\n"
	"#line 35\n"
	" * https://github.com/hellory4n/starry3d\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * starry/shader/defs.glsl\n"
	"#line 35\n"
	" * Just a bunch of structs and enums and constants\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * Copyright (c) 2025 hellory4n <hellory4n@gmail.com>\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * This software is provided 'as-is', without any express or implied\n"
	"#line 35\n"
	" * warranty. In no event will the authors be held liable for any damages\n"
	"#line 35\n"
	" * arising from the use of this software.\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * Permission is granted to anyone to use this software for any purpose,\n"
	"#line 35\n"
	" * including commercial applications, and to alter it and redistribute it\n"
	"#line 35\n"
	" * freely, subject to the following restrictions:\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" * 1. The origin of this software must not be misrepresented; you must not\n"
	"#line 35\n"
	" *    claim that you wrote the original software. If you use this software\n"
	"#line 35\n"
	" *    in a product, an acknowledgment in the product documentation would be\n"
	"#line 35\n"
	" *    appreciated but is not required.\n"
	"#line 35\n"
	" * 2. Altered source versions must be plainly marked as such, and must not be\n"
	"#line 35\n"
	" *    misrepresented as being the original software.\n"
	"#line 35\n"
	" * 3. This notice may not be removed or altered from any source distribution.\n"
	"#line 35\n"
	" *\n"
	"#line 35\n"
	" */\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"#ifndef _ST_DEFS_H\n"
	"#line 35\n"
	"#define _ST_DEFS_H\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"struct TerrainVertex {\n"
	"#line 35\n"
	"\tuvec3 position;\n"
	"#line 35\n"
	"\tuint normal;\n"
	"#line 35\n"
	"\tbool shaded;\n"
	"#line 35\n"
	"\tbool using_texture;\n"
	"#line 35\n"
	"\tbool billboard;\n"
	"#line 35\n"
	"\tuint texture_id;\n"
	"#line 35\n"
	"\tuvec4 color;\n"
	"#line 35\n"
	"};\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"#define NORMAL_FRONT 0u\n"
	"#line 35\n"
	"#define NORMAL_BACK 1u\n"
	"#line 35\n"
	"#define NORMAL_LEFT 2u\n"
	"#line 35\n"
	"#define NORMAL_RIGHT 3u\n"
	"#line 35\n"
	"#define NORMAL_TOP 4u\n"
	"#line 35\n"
	"#define NORMAL_BOTTOM 5u\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"#define QUAD_CORNER_TOP_LEFT 0u\n"
	"#line 35\n"
	"#define QUAD_CORNER_TOP_RIGHT 1u\n"
	"#line 35\n"
	"#define QUAD_CORNER_BOTTOM_LEFT 2u\n"
	"#line 35\n"
	"#define QUAD_CORNER_BOTTOM_RIGHT 3u\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"#define CHUNK_SIZE 32\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"struct Rect {\n"
	"#line 35\n"
	"\tuint x;\n"
	"#line 35\n"
	"\tuint y;\n"
	"#line 35\n"
	"\tuint width;\n"
	"#line 35\n"
	"\tuint height;\n"
	"#line 35\n"
	"};\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"#endif // _ST_DEFS_H\n"
	"#line 35\n"
	"#pragma mrshader include starry/shader/defs.glsl\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"TerrainVertex unpack_vertex(uvec2 src)\n"
	"#line 35\n"
	"{\n"
	"#line 35\n"
	"\tTerrainVertex v;\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"\tv.position.x = (data.x >> 0) & 0x1Fu;\n"
	"#line 35\n"
	"\tv.position.y = (data.x >> 5) & 0x1Fu;\n"
	"#line 35\n"
	"\tv.position.z = (data.x >> 10) & 0x1Fu;\n"
	"#line 35\n"
	"\tv.normal = (data.x >> 15) & 0x7u;\n"
	"#line 35\n"
	"\tv.using_texture = ((data.x >> 18) & 1u) != 0u;\n"
	"#line 35\n"
	"\tv.billboard = ((data.x >> 19) & 1u) != 0u;\n"
	"#line 35\n"
	"\tv.shaded = ((data.x >> 20) & 1u) != 0u;\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"\tif (v.using_texture) {\n"
	"#line 35\n"
	"\t\tv.texture_id = data.y & 0xFFFFu;\n"
	"#line 35\n"
	"\t\tv.color = uvec4(255, 255, 255, 255);\n"
	"#line 35\n"
	"\t}\n"
	"#line 35\n"
	"\telse {\n"
	"#line 35\n"
	"\t\tv.color = uvec4(\n"
	"#line 35\n"
	"\t\t\t(data.y >> 0) & 0xFFu,\n"
	"#line 35\n"
	"\t\t\t(data.y >> 8) & 0xFFu,\n"
	"#line 35\n"
	"\t\t\t(data.y >> 16) & 0xFFu,\n"
	"#line 35\n"
	"\t\t\t(data.y >> 24) & 0xFFu\n"
	"#line 35\n"
	"\t\t);\n"
	"#line 35\n"
	"\t\tv.texture_id = 0;\n"
	"#line 35\n"
	"\t}\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"\treturn v;\n"
	"#line 35\n"
	"}\n"
	"#line 35\n"
	"\n"
	"#line 35\n"
	"#endif // _ST_VERTEX_H\n"
	"#line 36\n"
	"/*\n"
	"#line 36\n"
	" * starry3d: C++ voxel engine\n"
	"#line 36\n"
	" * https://github.com/hellory4n/starry3d\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * starry/shader/atlas.glsl\n"
	"#line 36\n"
	" * Handles texture atlas stuff I guess.\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * Copyright (c) 2025 hellory4n <hellory4n@gmail.com>\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * This software is provided 'as-is', without any express or implied\n"
	"#line 36\n"
	" * warranty. In no event will the authors be held liable for any damages\n"
	"#line 36\n"
	" * arising from the use of this software.\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * Permission is granted to anyone to use this software for any purpose,\n"
	"#line 36\n"
	" * including commercial applications, and to alter it and redistribute it\n"
	"#line 36\n"
	" * freely, subject to the following restrictions:\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * 1. The origin of this software must not be misrepresented; you must not\n"
	"#line 36\n"
	" *    claim that you wrote the original software. If you use this software\n"
	"#line 36\n"
	" *    in a product, an acknowledgment in the product documentation would be\n"
	"#line 36\n"
	" *    appreciated but is not required.\n"
	"#line 36\n"
	" * 2. Altered source versions must be plainly marked as such, and must not be\n"
	"#line 36\n"
	" *    misrepresented as being the original software.\n"
	"#line 36\n"
	" * 3. This notice may not be removed or altered from any source distribution.\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" */\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"#ifndef _ST_ATLAS_H\n"
	"#line 36\n"
	"#define _ST_ATLAS_H\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"/*\n"
	"#line 36\n"
	" * starry3d: C++ voxel engine\n"
	"#line 36\n"
	" * https://github.com/hellory4n/starry3d\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * starry/shader/defs.glsl\n"
	"#line 36\n"
	" * Just a bunch of structs and enums and constants\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * Copyright (c) 2025 hellory4n <hellory4n@gmail.com>\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * This software is provided 'as-is', without any express or implied\n"
	"#line 36\n"
	" * warranty. In no event will the authors be held liable for any damages\n"
	"#line 36\n"
	" * arising from the use of this software.\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * Permission is granted to anyone to use this software for any purpose,\n"
	"#line 36\n"
	" * including commercial applications, and to alter it and redistribute it\n"
	"#line 36\n"
	" * freely, subject to the following restrictions:\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * 1. The origin of this software must not be misrepresented; you must not\n"
	"#line 36\n"
	" *    claim that you wrote the original software. If you use this software\n"
	"#line 36\n"
	" *    in a product, an acknowledgment in the product documentation would be\n"
	"#line 36\n"
	" *    appreciated but is not required.\n"
	"#line 36\n"
	" * 2. Altered source versions must be plainly marked as such, and must not be\n"
	"#line 36\n"
	" *    misrepresented as being the original software.\n"
	"#line 36\n"
	" * 3. This notice may not be removed or altered from any source distribution.\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" */\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"#ifndef _ST_DEFS_H\n"
	"#line 36\n"
	"#define _ST_DEFS_H\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"struct TerrainVertex {\n"
	"#line 36\n"
	"\tuvec3 position;\n"
	"#line 36\n"
	"\tuint normal;\n"
	"#line 36\n"
	"\tbool shaded;\n"
	"#line 36\n"
	"\tbool using_texture;\n"
	"#line 36\n"
	"\tbool billboard;\n"
	"#line 36\n"
	"\tuint texture_id;\n"
	"#line 36\n"
	"\tuvec4 color;\n"
	"#line 36\n"
	"};\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"#define NORMAL_FRONT 0u\n"
	"#line 36\n"
	"#define NORMAL_BACK 1u\n"
	"#line 36\n"
	"#define NORMAL_LEFT 2u\n"
	"#line 36\n"
	"#define NORMAL_RIGHT 3u\n"
	"#line 36\n"
	"#define NORMAL_TOP 4u\n"
	"#line 36\n"
	"#define NORMAL_BOTTOM 5u\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"#define QUAD_CORNER_TOP_LEFT 0u\n"
	"#line 36\n"
	"#define QUAD_CORNER_TOP_RIGHT 1u\n"
	"#line 36\n"
	"#define QUAD_CORNER_BOTTOM_LEFT 2u\n"
	"#line 36\n"
	"#define QUAD_CORNER_BOTTOM_RIGHT 3u\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"#define CHUNK_SIZE 32\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"struct Rect {\n"
	"#line 36\n"
	"\tuint x;\n"
	"#line 36\n"
	"\tuint y;\n"
	"#line 36\n"
	"\tuint width;\n"
	"#line 36\n"
	"\tuint height;\n"
	"#line 36\n"
	"};\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"#endif // _ST_DEFS_H\n"
	"#line 36\n"
	"#pragma mrshader include starry/shader/defs.glsl\n"
	"#line 36\n"
	"/*\n"
	"#line 36\n"
	" * starry3d: C++ voxel engine\n"
	"#line 36\n"
	" * https://github.com/hellory4n/starry3d\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * starry/shader/uniforms.glsl\n"
	"#line 36\n"
	" * Literally just uniforms\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * Copyright (c) 2025 hellory4n <hellory4n@gmail.com>\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * This software is provided 'as-is', without any express or implied\n"
	"#line 36\n"
	" * warranty. In no event will the authors be held liable for any damages\n"
	"#line 36\n"
	" * arising from the use of this software.\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * Permission is granted to anyone to use this software for any purpose,\n"
	"#line 36\n"
	" * including commercial applications, and to alter it and redistribute it\n"
	"#line 36\n"
	" * freely, subject to the following restrictions:\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * 1. The origin of this software must not be misrepresented; you must not\n"
	"#line 36\n"
	" *    claim that you wrote the original software. If you use this software\n"
	"#line 36\n"
	" *    in a product, an acknowledgment in the product documentation would be\n"
	"#line 36\n"
	" *    appreciated but is not required.\n"
	"#line 36\n"
	" * 2. Altered source versions must be plainly marked as such, and must not be\n"
	"#line 36\n"
	" *    misrepresented as being the original software.\n"
	"#line 36\n"
	" * 3. This notice may not be removed or altered from any source distribution.\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" */\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"#ifndef _ST_UNIFORMS_H\n"
	"#line 36\n"
	"#define _ST_UNIFORMS_H\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"/*\n"
	"#line 36\n"
	" * starry3d: C++ voxel engine\n"
	"#line 36\n"
	" * https://github.com/hellory4n/starry3d\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * starry/shader/defs.glsl\n"
	"#line 36\n"
	" * Just a bunch of structs and enums and constants\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * Copyright (c) 2025 hellory4n <hellory4n@gmail.com>\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * This software is provided 'as-is', without any express or implied\n"
	"#line 36\n"
	" * warranty. In no event will the authors be held liable for any damages\n"
	"#line 36\n"
	" * arising from the use of this software.\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * Permission is granted to anyone to use this software for any purpose,\n"
	"#line 36\n"
	" * including commercial applications, and to alter it and redistribute it\n"
	"#line 36\n"
	" * freely, subject to the following restrictions:\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" * 1. The origin of this software must not be misrepresented; you must not\n"
	"#line 36\n"
	" *    claim that you wrote the original software. If you use this software\n"
	"#line 36\n"
	" *    in a product, an acknowledgment in the product documentation would be\n"
	"#line 36\n"
	" *    appreciated but is not required.\n"
	"#line 36\n"
	" * 2. Altered source versions must be plainly marked as such, and must not be\n"
	"#line 36\n"
	" *    misrepresented as being the original software.\n"
	"#line 36\n"
	" * 3. This notice may not be removed or altered from any source distribution.\n"
	"#line 36\n"
	" *\n"
	"#line 36\n"
	" */\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"#ifndef _ST_DEFS_H\n"
	"#line 36\n"
	"#define _ST_DEFS_H\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"struct TerrainVertex {\n"
	"#line 36\n"
	"\tuvec3 position;\n"
	"#line 36\n"
	"\tuint normal;\n"
	"#line 36\n"
	"\tbool shaded;\n"
	"#line 36\n"
	"\tbool using_texture;\n"
	"#line 36\n"
	"\tbool billboard;\n"
	"#line 36\n"
	"\tuint texture_id;\n"
	"#line 36\n"
	"\tuvec4 color;\n"
	"#line 36\n"
	"};\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"#define NORMAL_FRONT 0u\n"
	"#line 36\n"
	"#define NORMAL_BACK 1u\n"
	"#line 36\n"
	"#define NORMAL_LEFT 2u\n"
	"#line 36\n"
	"#define NORMAL_RIGHT 3u\n"
	"#line 36\n"
	"#define NORMAL_TOP 4u\n"
	"#line 36\n"
	"#define NORMAL_BOTTOM 5u\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"#define QUAD_CORNER_TOP_LEFT 0u\n"
	"#line 36\n"
	"#define QUAD_CORNER_TOP_RIGHT 1u\n"
	"#line 36\n"
	"#define QUAD_CORNER_BOTTOM_LEFT 2u\n"
	"#line 36\n"
	"#define QUAD_CORNER_BOTTOM_RIGHT 3u\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"#define CHUNK_SIZE 32\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"struct Rect {\n"
	"#line 36\n"
	"\tuint x;\n"
	"#line 36\n"
	"\tuint y;\n"
	"#line 36\n"
	"\tuint width;\n"
	"#line 36\n"
	"\tuint height;\n"
	"#line 36\n"
	"};\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"#endif // _ST_DEFS_H\n"
	"#line 36\n"
	"#pragma mrshader include starry/shader/defs.glsl\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"uniform mat4 u_model;\n"
	"#line 36\n"
	"uniform mat4 u_view;\n"
	"#line 36\n"
	"uniform mat4 u_projection;\n"
	"#line 36\n"
	"uniform uvec3 u_chunk;\n"
	"#line 36\n"
	"uniform uvec2 u_atlas_size;\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"#pragma mrshader define U_MODEL \"u_model\"\n"
	"#line 36\n"
	"#pragma mrshader define U_VIEW \"u_view\"\n"
	"#line 36\n"
	"#pragma mrshader define U_PROJECTION \"u_projection\"\n"
	"#line 36\n"
	"#pragma mrshader define U_CHUNK \"u_chunk\"\n"
	"#line 36\n"
	"#pragma mrshader define U_ATLAS_SIZE \"u_atlas_size\"\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"#pragma mrshader define SSBO_ATLAS 0\n"
	"#line 36\n"
	"layout(binding = 0, std430) readonly buffer atlas {\n"
	"#line 36\n"
	"\t// storing the whole 16k rects is faster than implementing hashmaps on the gpu\n"
	"#line 36\n"
	"\tRect u_atlas_textures[];\n"
	"#line 36\n"
	"};\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"#pragma mrshader define SSBO_VERTICES 1\n"
	"#line 36\n"
	"layout(binding = 1, std430) readonly buffer vertices {\n"
	"#line 36\n"
	"\t// max size is 8*6*32*16*16*16/2\n"
	"#line 36\n"
	"\t// so:\n"
	"#line 36\n"
	"\t// - 8 bytes for the vertex\n"
	"#line 36\n"
	"\t// - 6 quads for a cube\n"
	"#line 36\n"
	"\t// - 32 is the chunk size\n"
	"#line 36\n"
	"\t// - 16*16*16 for the render distance\n"
	"#line 36\n"
	"\t// - divided by 2 because that's the max you can fit while avoiding culling\n"
	"#line 36\n"
	"\t// - = 3 mb\n"
	"#line 36\n"
	"\t// jesus christ\n"
	"#line 36\n"
	"\tTerrainVertex u_vertices[];\n"
	"#line 36\n"
	"};\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"#endif // _ST_UNIFORMS_H\n"
	"#line 36\n"
	"#pragma mrshader include starry/shader/uniforms.glsl\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"vec2 get_texcoords(TerrainVertex v, int vertex_id)\n"
	"#line 36\n"
	"{\n"
	"#line 36\n"
	"\tvec2 texcoords = vec2(0, 0);\n"
	"#line 36\n"
	"\tRect texture_rect = u_atlas_textures[v.texture_id];\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"\tswitch (vertex_id % 4) {\n"
	"#line 36\n"
	"\tcase QUAD_CORNER_TOP_LEFT:\n"
	"#line 36\n"
	"\t\ttexcoords = vec2(float(texture_rect.x), float(texture_rect.y));\n"
	"#line 36\n"
	"\t\tbreak;\n"
	"#line 36\n"
	"\tcase QUAD_CORNER_TOP_RIGHT:\n"
	"#line 36\n"
	"\t\ttexcoords = vec2(float(texture_rect.x + texture_rect.width), float(texture_rect.y));\n"
	"#line 36\n"
	"\t\tbreak;\n"
	"#line 36\n"
	"\tcase QUAD_CORNER_BOTTOM_LEFT:\n"
	"#line 36\n"
	"\t\ttexcoords = vec2(float(texture_rect.x), float(texture_rect.y + texture_rect.height));\n"
	"#line 36\n"
	"\t\tbreak;\n"
	"#line 36\n"
	"\tcase QUAD_CORNER_BOTTOM_RIGHT:\n"
	"#line 36\n"
	"\t\ttexcoords = vec2(float(texture_rect.x + texture_rect.width),\n"
	"#line 36\n"
	"\t\t\tfloat(texture_rect.y + texture_rect.height)\n"
	"#line 36\n"
	"\t\t);\n"
	"#line 36\n"
	"\t\tbreak;\n"
	"#line 36\n"
	"\t}\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"\treturn texcoords / vec2(u_atlas_size);\n"
	"#line 36\n"
	"}\n"
	"#line 36\n"
	"\n"
	"#line 36\n"
	"#endif // _ST_ATLAS_H\n"
	"#line 37\n"
	"/*\n"
	"#line 37\n"
	" * starry3d: C++ voxel engine\n"
	"#line 37\n"
	" * https://github.com/hellory4n/starry3d\n"
	"#line 37\n"
	" *\n"
	"#line 37\n"
	" * starry/shader/uniforms.glsl\n"
	"#line 37\n"
	" * Literally just uniforms\n"
	"#line 37\n"
	" *\n"
	"#line 37\n"
	" * Copyright (c) 2025 hellory4n <hellory4n@gmail.com>\n"
	"#line 37\n"
	" *\n"
	"#line 37\n"
	" * This software is provided 'as-is', without any express or implied\n"
	"#line 37\n"
	" * warranty. In no event will the authors be held liable for any damages\n"
	"#line 37\n"
	" * arising from the use of this software.\n"
	"#line 37\n"
	" *\n"
	"#line 37\n"
	" * Permission is granted to anyone to use this software for any purpose,\n"
	"#line 37\n"
	" * including commercial applications, and to alter it and redistribute it\n"
	"#line 37\n"
	" * freely, subject to the following restrictions:\n"
	"#line 37\n"
	" *\n"
	"#line 37\n"
	" * 1. The origin of this software must not be misrepresented; you must not\n"
	"#line 37\n"
	" *    claim that you wrote the original software. If you use this software\n"
	"#line 37\n"
	" *    in a product, an acknowledgment in the product documentation would be\n"
	"#line 37\n"
	" *    appreciated but is not required.\n"
	"#line 37\n"
	" * 2. Altered source versions must be plainly marked as such, and must not be\n"
	"#line 37\n"
	" *    misrepresented as being the original software.\n"
	"#line 37\n"
	" * 3. This notice may not be removed or altered from any source distribution.\n"
	"#line 37\n"
	" *\n"
	"#line 37\n"
	" */\n"
	"#line 37\n"
	"\n"
	"#line 37\n"
	"#ifndef _ST_UNIFORMS_H\n"
	"#line 37\n"
	"#define _ST_UNIFORMS_H\n"
	"#line 37\n"
	"\n"
	"#line 37\n"
	"/*\n"
	"#line 37\n"
	" * starry3d: C++ voxel engine\n"
	"#line 37\n"
	" * https://github.com/hellory4n/starry3d\n"
	"#line 37\n"
	" *\n"
	"#line 37\n"
	" * starry/shader/defs.glsl\n"
	"#line 37\n"
	" * Just a bunch of structs and enums and constants\n"
	"#line 37\n"
	" *\n"
	"#line 37\n"
	" * Copyright (c) 2025 hellory4n <hellory4n@gmail.com>\n"
	"#line 37\n"
	" *\n"
	"#line 37\n"
	" * This software is provided 'as-is', without any express or implied\n"
	"#line 37\n"
	" * warranty. In no event will the authors be held liable for any damages\n"
	"#line 37\n"
	" * arising from the use of this software.\n"
	"#line 37\n"
	" *\n"
	"#line 37\n"
	" * Permission is granted to anyone to use this software for any purpose,\n"
	"#line 37\n"
	" * including commercial applications, and to alter it and redistribute it\n"
	"#line 37\n"
	" * freely, subject to the following restrictions:\n"
	"#line 37\n"
	" *\n"
	"#line 37\n"
	" * 1. The origin of this software must not be misrepresented; you must not\n"
	"#line 37\n"
	" *    claim that you wrote the original software. If you use this software\n"
	"#line 37\n"
	" *    in a product, an acknowledgment in the product documentation would be\n"
	"#line 37\n"
	" *    appreciated but is not required.\n"
	"#line 37\n"
	" * 2. Altered source versions must be plainly marked as such, and must not be\n"
	"#line 37\n"
	" *    misrepresented as being the original software.\n"
	"#line 37\n"
	" * 3. This notice may not be removed or altered from any source distribution.\n"
	"#line 37\n"
	" *\n"
	"#line 37\n"
	" */\n"
	"#line 37\n"
	"\n"
	"#line 37\n"
	"#ifndef _ST_DEFS_H\n"
	"#line 37\n"
	"#define _ST_DEFS_H\n"
	"#line 37\n"
	"\n"
	"#line 37\n"
	"struct TerrainVertex {\n"
	"#line 37\n"
	"\tuvec3 position;\n"
	"#line 37\n"
	"\tuint normal;\n"
	"#line 37\n"
	"\tbool shaded;\n"
	"#line 37\n"
	"\tbool using_texture;\n"
	"#line 37\n"
	"\tbool billboard;\n"
	"#line 37\n"
	"\tuint texture_id;\n"
	"#line 37\n"
	"\tuvec4 color;\n"
	"#line 37\n"
	"};\n"
	"#line 37\n"
	"\n"
	"#line 37\n"
	"#define NORMAL_FRONT 0u\n"
	"#line 37\n"
	"#define NORMAL_BACK 1u\n"
	"#line 37\n"
	"#define NORMAL_LEFT 2u\n"
	"#line 37\n"
	"#define NORMAL_RIGHT 3u\n"
	"#line 37\n"
	"#define NORMAL_TOP 4u\n"
	"#line 37\n"
	"#define NORMAL_BOTTOM 5u\n"
	"#line 37\n"
	"\n"
	"#line 37\n"
	"#define QUAD_CORNER_TOP_LEFT 0u\n"
	"#line 37\n"
	"#define QUAD_CORNER_TOP_RIGHT 1u\n"
	"#line 37\n"
	"#define QUAD_CORNER_BOTTOM_LEFT 2u\n"
	"#line 37\n"
	"#define QUAD_CORNER_BOTTOM_RIGHT 3u\n"
	"#line 37\n"
	"\n"
	"#line 37\n"
	"#define CHUNK_SIZE 32\n"
	"#line 37\n"
	"\n"
	"#line 37\n"
	"struct Rect {\n"
	"#line 37\n"
	"\tuint x;\n"
	"#line 37\n"
	"\tuint y;\n"
	"#line 37\n"
	"\tuint width;\n"
	"#line 37\n"
	"\tuint height;\n"
	"#line 37\n"
	"};\n"
	"#line 37\n"
	"\n"
	"#line 37\n"
	"#endif // _ST_DEFS_H\n"
	"#line 37\n"
	"#pragma mrshader include starry/shader/defs.glsl\n"
	"#line 37\n"
	"\n"
	"#line 37\n"
	"uniform mat4 u_model;\n"
	"#line 37\n"
	"uniform mat4 u_view;\n"
	"#line 37\n"
	"uniform mat4 u_projection;\n"
	"#line 37\n"
	"uniform uvec3 u_chunk;\n"
	"#line 37\n"
	"uniform uvec2 u_atlas_size;\n"
	"#line 37\n"
	"\n"
	"#line 37\n"
	"#pragma mrshader define U_MODEL \"u_model\"\n"
	"#line 37\n"
	"#pragma mrshader define U_VIEW \"u_view\"\n"
	"#line 37\n"
	"#pragma mrshader define U_PROJECTION \"u_projection\"\n"
	"#line 37\n"
	"#pragma mrshader define U_CHUNK \"u_chunk\"\n"
	"#line 37\n"
	"#pragma mrshader define U_ATLAS_SIZE \"u_atlas_size\"\n"
	"#line 37\n"
	"\n"
	"#line 37\n"
	"#pragma mrshader define SSBO_ATLAS 0\n"
	"#line 37\n"
	"layout(binding = 0, std430) readonly buffer atlas {\n"
	"#line 37\n"
	"\t// storing the whole 16k rects is faster than implementing hashmaps on the gpu\n"
	"#line 37\n"
	"\tRect u_atlas_textures[];\n"
	"#line 37\n"
	"};\n"
	"#line 37\n"
	"\n"
	"#line 37\n"
	"#pragma mrshader define SSBO_VERTICES 1\n"
	"#line 37\n"
	"layout(binding = 1, std430) readonly buffer vertices {\n"
	"#line 37\n"
	"\t// max size is 8*6*32*16*16*16/2\n"
	"#line 37\n"
	"\t// so:\n"
	"#line 37\n"
	"\t// - 8 bytes for the vertex\n"
	"#line 37\n"
	"\t// - 6 quads for a cube\n"
	"#line 37\n"
	"\t// - 32 is the chunk size\n"
	"#line 37\n"
	"\t// - 16*16*16 for the render distance\n"
	"#line 37\n"
	"\t// - divided by 2 because that's the max you can fit while avoiding culling\n"
	"#line 37\n"
	"\t// - = 3 mb\n"
	"#line 37\n"
	"\t// jesus christ\n"
	"#line 37\n"
	"\tTerrainVertex u_vertices[];\n"
	"#line 37\n"
	"};\n"
	"#line 37\n"
	"\n"
	"#line 37\n"
	"#endif // _ST_UNIFORMS_H\n"
	"#line 38\n"
	"\n"
	"#line 39\n"
	"// vertices are hyper optimized to safe space\n"
	"#line 40\n"
	"layout (location = 0) in uvec2 vs_packed;\n"
	"#line 41\n"
	"\n"
	"#line 42\n"
	"out vec2 fs_texcoords;\n"
	"#line 43\n"
	"out vec4 fs_color;\n"
	"#line 44\n"
	"// you can't pass a bool here :DDDDD\n"
	"#line 45\n"
	"flat out int fs_using_texture;\n"
	"#line 46\n"
	"flat out int fs_shaded;\n"
	"#line 47\n"
	"\n"
	"#line 48\n"
	"void main()\n"
	"#line 49\n"
	"{\n"
	"#line 50\n"
	"\tTerrainVertex v = unpack_vertex(u_vertices[gl_VertexID / 4]);\n"
	"#line 51\n"
	"\n"
	"#line 52\n"
	"\tvec3 position = vec3(v.position) * vec3(u_chunk + uvec3(1, 1, 1)) * CHUNK_SIZE;\n"
	"#line 53\n"
	"\tgl_Position = u_projection * u_view * u_model * vec4(position, 1.0);\n"
	"#line 54\n"
	"\n"
	"#line 55\n"
	"\tif (v.using_texture) {\n"
	"#line 56\n"
	"\t\tfs_texcoords = get_texcoords(v, gl_VertexID);\n"
	"#line 57\n"
	"\t\tfs_color = vec4(1, 1, 1, 1);\n"
	"#line 58\n"
	"\t}\n"
	"#line 59\n"
	"\telse {\n"
	"#line 60\n"
	"\t\tfs_texcoords = vec2(0, 0);\n"
	"#line 61\n"
	"\t\tfs_color = vec4(v.color) / 255;\n"
	"#line 62\n"
	"\t}\n"
	"#line 63\n"
	"\tfs_using_texture = int(v.using_texture);\n"
	"#line 64\n"
	"\tfs_shaded = int(v.shaded);\n"
	"#line 65\n"
	"}\n"
	"#line 66\n"
	"\n";

#ifdef __cplusplus
constexpr const char* ST_TERRAIN_SHADER_FRAGMENT = 
#else
static const char* ST_TERRAIN_SHADER_FRAGMENT = 
#endif
	"#version 430 core\n"
	"#line 68\n"
	"in vec2 fs_texcoords;\n"
	"#line 69\n"
	"in vec4 fs_color;\n"
	"#line 70\n"
	"flat in int fs_using_texture;\n"
	"#line 71\n"
	"flat in int fs_shaded;\n"
	"#line 72\n"
	"\n"
	"#line 73\n"
	"out vec4 frag_color;\n"
	"#line 74\n"
	"\n"
	"#line 75\n"
	"uniform sampler2D u_texture;\n"
	"#line 76\n"
	"\n"
	"#line 77\n"
	"void main()\n"
	"#line 78\n"
	"{\n"
	"#line 79\n"
	"\t// TODO lighting\n"
	"#line 80\n"
	"\tif (bool(fs_using_texture)) {\n"
	"#line 81\n"
	"\t\tfrag_color = texture(u_texture, fs_texcoords);\n"
	"#line 82\n"
	"\t}\n"
	"#line 83\n"
	"\telse {\n"
	"#line 84\n"
	"\t\tfrag_color = fs_color;\n"
	"#line 85\n"
	"\t}\n"
	"#line 86\n"
	"}\n";

#define ST_TERRAIN_SHADER_SSBO_ATLAS 0
#define ST_TERRAIN_SHADER_U_CHUNK "u_chunk"
#define ST_TERRAIN_SHADER_U_MODEL "u_model"
#define ST_TERRAIN_SHADER_U_ATLAS_SIZE "u_atlas_size"
#define ST_TERRAIN_SHADER_U_PROJECTION "u_projection"
#define ST_TERRAIN_SHADER_SSBO_VERTICES 1
#define ST_TERRAIN_SHADER_U_VIEW "u_view"

#endif
